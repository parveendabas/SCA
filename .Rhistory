summarise(flights, delay = mean(dep_delay))
by_day <- group_by(flights, year, month, day)
group_by(flights, year, month, day)
?group_by
by_day <- group_by(flights, year, month, day)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year, month)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
by_day <- group_by(flights, year)
summarise(by_day, delay = mean(dep_delay, na.rm = TRUE))
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
source('~/.active-rstudio-document')
not_cancelled %>%
group_by(year, month, day) %>%
summarise(mean = mean(dep_delay))
library(dplyr)
library(nycflights13)
not_cancelled <- flights %>%
filter(!is.na(dep_delay), !is.na(arr_delay))
not_cancelled %>%
group_by(year, month, day) %>%
print(summarise(mean = mean(dep_delay)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x y <- 10
source('~/.active-rstudio-document')
x y <- 10
x y <- 10
?alpha
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay
select(flights, year, month, day)
select(flights, month, year, day)
filter(flights, arr_delay > 120, dep_delay <= 0)
filter(flights, arr_delay > 120, dep_delay <= 0)
library(dplyr)
library(nycflights13)
source('~/Untitled.R')
x <- 10
installed.packages("nycflights13")
install.packages("nycflights13")
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
?nycflights13
nycflights13
flights
flights
flights
view(flights)
View(flights)
flights
flights
filter(flights, year, month, day)
flights
filter(flights, month == 1, day == 1)
filter(flights, month == 1, day == 110)
filter(flights, month == 1, day == 10)
filter(flights, month == 1, day == 10)
filter(flights, month == 12, day == 25)
filter(flights, month = 12)
filter(flights, month == 12)
sqrt(2)
sqrt(2) ^ 2
sqrt(2) ^ 2 == 2
near(sqrt(2) ^ 2 == 2, 2)
near(sqrt(2) ^ 2,  2)
filter(flights, month == 12 | month == 11)
filter(flights, month == 12 | month == 10)
filter(flights, month %in% c(11, 12))
filter
flights
flights
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, (arr_delay > 120 | dep_delay > 120))
NA > 5
10 == NA
NA == NA
x <- NA
y <- NA
x == y
is.na(x)
df <- tibble(x = c(1, NA, 3))
df
filter(df, x>1)
filter(df, is.na(x), x>1)
filter(df, is.na(x) | x>1)
flights
filter(flights, arr_delay >= 120)
filter(flights, arr_delay == 120)
flights
fliter(flights, dest == IAH | dest == HOU)
fliter(flights, dest == "IAH" | dest == "HOU")
filter(flights, dest == "IAH" | dest == "HOU")
flights
filter(flights, carrier %in% c("UA", "AA", "DL"))
fliter(flights, arr_delay > 120 & dep_delay <= 0)
filter(flights, arr_delay > 120 & dep_delay <= 0)
flights
arrange(flights, year, month, day)
arrange(flights, dep_delay)
arrange(flights, desc(dep_delay))
df <- tibble(x = c(5, 2, NA))
df
arrange(df, x)
arrange(df, desc(x))
df
arrange(df, x)
arrange(df, desc(x))
arrange(flights, is.na(x))
arrange(df, is.na(x))
arrange(df, desc(is.na(x)))
flights
arrange(flights, arr_time - dep_time)
flights
select(flights, year, month, day)
select(flights, year:day)
flights
select(flights, year:day)
select(flights, -(year:day))
flights
select(flights, starts_with("arr"))
select(flights, starts_with("dep"))
select(flights, ends_with("time"))
flights
select(flights, contains("hed"))
select(flights, matches("(.)\\1"))
select(flights, matches("(.)\\2"))
select(flights, matches("(.)\\1"))
flights
rename(flights, tail_num = tailnum)
flights
select(flights, time_hour, air_time, everything())
flights
select(flights, dep_time, dep_delay, arr_time, arr_delay)
select(flights, starts_with("dep"), starts_with("arr"_delay")
select(flights, starts_with("dep"), starts_with("arr"_delay"))
select(flights, starts_with("dep"), starts_with("arr"))
values <- c("dep_time", "dep_delay", "arr_time", "arr_delay")
select(flights, values)
flights
flights_sml <- select(flights,
year:day,
ends_with("delay"),
distance,
air_time
)
flights_sml
mutate(flights_sml, gain = dep_delay - arr_delay, speed = distance / air_time * 60)
mutate(flights_sml,
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
transmute(flights_sml,
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours
)
49 %/% 5
49 %% 5
flights
transmute(flights,
dep_time,
hour = dep_time %/% 100,
minute = dep_time %% 100
)
summarise(flights, delay = mean(dep_delay))
summarise(flights, delay = mean(dep_delay, na.rm = TRUE))
install.packages("uwot")
py_config()
library(reticulate)
py_config()
use_python("/Users/kumarpa/anaconda3/bin/python")
use_python("/Users/kumarpa/anaconda3/bin/python")
use_virtualenv("/Users/kumarpa/anaconda3/bin/python")
use_condaenv("/Users/kumarpa/anaconda3/bin/python")
py_config()
library(reticulate)
py_config()
use_python("/opt/anaconda3/bin/python")
use_python("/opt/anaconda3/bin/python")
use_virtualenv("/opt/anaconda3/bin/python")
use_condaenv("/opt/anaconda3/bin/python")
py_config()
install.packages("devtools")
devtools::install_github('cole-trapnell-lab/leidenbase')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("kstreet13/slingshot")
BiocManager::install("destiny")
BiocManager::install("SingleCellExperiment")
install.packages("mclust")
install.packages("gam")
devtools::install_github("hms-dbmi/pagoda2")
devtools::install_github("hms-dbmi/pagoda2")
(36*3)/129
(36*3)
rm(list=ls()) # clear workspace
library(reticulate)
use_python("/opt/anaconda3/bin/python")
use_python("/opt/anaconda3/bin/python")
use_virtualenv("/opt/anaconda3/bin/python")
py_config()
library(Seurat)
library(Matrix)
library(stringr)
library(useful)
library(ggplot2)
library(gridExtra)
library(grid)
library(gtable)
library(data.table)
library(cowplot)
library(plyr)
library(reshape2)
library(tidyr)
library(pheatmap)
library(RColorBrewer)
library(tidyverse)
library(colorspace)
library(splines)
library(AnnotationDbi)
library(dplyr)
library(gridBase)
library(ggrepel)
library(calibrate)
library(mixtools)
library(plotGMM)
library(monocle3)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocGenerics")
library(monocle3)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocGenerics")
?reduce_dimension
library(Seurat)
library(Matrix)
library(stringr)
library(useful)
library(ggplot2)
library(gridExtra)
library(grid)
library(gtable)
library(data.table)
library(cowplot)
library(plyr)
library(reshape2)
library(tidyr)
library(pheatmap)
library(RColorBrewer)
library(tidyverse)
library(colorspace)
library(splines)
library(AnnotationDbi)
library(dplyr)
library(gridBase)
library(ggrepel)
library(calibrate)
library(mixtools)
library(plotGMM)
library(monocle3)
?reduce_dimension
?cluster_cells
?learn_graph
rm(list=ls()) # clear workspace
library(reticulate)
use_python("/opt/anaconda3/bin/python")
use_python("/opt/anaconda3/bin/python")
use_virtualenv("/opt/anaconda3/bin/python")
py_config()
library(Seurat)
BiocManager::valid()
BiocManager::install(c(
"AnnotationDbi", "arules", "BiocGenerics", "dials", "fs", "gdtools", "ggstance", "glue", "gtools", "plotly", "quantreg", "reticulate", "rsample",
"sf", "sn", "SnowballC", "StanHeaders", "tibble", "tune", "vcd", "xml2"
), update = TRUE, ask = FALSE)
BiocManager::valid()
library(Seurat)
library(scde)
install.packages("devtools")  # this command install devtools first if you donâ€™t have devtools installed
require(devtools)
install_version("flexmix", version = "2.3-13", repos = "http://cran.us.r-project.org")
require(devtools)
devtools::install_github('hms-dbmi/scde', build_vignettes = FALSE)
devtools::install_github('hms-dbmi/scde', build_vignettes = FALSE)
download.file(url = "https://github.com/hms-dbmi/scde/archive/1.99.2.tar.gz", destfile = "1.99.2.tar.gz")
install.packages("1.99.2.tar.gz", repos = NULL, type = 'source', dependencies = TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BiocGenerics")
Macaulay
library(monocle3)
rm(list=ls()) # clear workspace
library(monocle3)
sessionInfo()
library(SCA)
matrix.DIR <- "/Users/kumarpa/Desktop/Work/Jax/Kyuson/Bill_Pipeline_Data/Mouse_RNAseq/Data_Input/MYSC23_GFP_RE/filtered_feature_bc_matrix"
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?load_Packages_SeuratAnalysis
library(SCA)
?Read10X_Norm_Mouse
?load_Packages_SeuratAnalysis
79889 + 2070 + 4500
79889 + 2070 + 4500 + 7 + 38
6270 + 85
6270 + 86
library(SCA)
ReInstallSCA="NO"
if(ReInstallSCA=="YES"){
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
}
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
Filter_Genes_from_Variable_Genelist_Mouse
library(SCA)
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
Filter_Genes_from_Variable_Genelist_Mouse
Filter_Genes_from_Variable_Genelist_Mouse()
?Filter_Genes_from_Variable_Genelist_Mouse
?SCA
library(SCA)
?Filter_Genes_from_Variable_Genelist_Mouse
library(SCA)
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
rm(list=ls()) # clear workspace
library(SCA)
load_Packages_SeuratAnalysis()
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
library(SCA)
?Read10X_Norm_Mouse
rm(list=ls()) # clear workspace
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
rm(list=ls()) # clear workspace
library(SCA)
load_Packages_SeuratAnalysis()
ReInstallSCA="NO"
if(ReInstallSCA=="YES"){
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
}
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
rm(list=ls()) # clear workspace
library(SCA)
load_Packages_SeuratAnalysis()
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
rm(list=ls()) # clear workspace
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
rm(list=ls()) # clear workspace
library("devtools")
library(roxygen2)
SCApackagedir <- "/Users/kumarpa/Desktop/Work/Jax/GitHub/"
rm(list=ls()) # clear workspace
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
rm(list=ls()) # clear workspace
library(SCA)
load_Packages_SeuratAnalysis()
ReInstallSCA="NO"
if(ReInstallSCA=="YES"){
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
}
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
rm(list=ls()) # clear workspace
library(SCA)
load_Packages_SeuratAnalysis()
ReInstallSCA="NO"
if(ReInstallSCA=="YES"){
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
}
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
?Perform_CCA
?Perform_CCA_Diff_PCAdim_res
?Perform_DGE_ONEvsALL
print("Re-Installing SCA from github")
detach(package:SCA)
rm(list=ls()) # clear workspace
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
?load_Packages_SeuratAnalysis
rm(list=ls()) # clear workspace
### Using SCA package
## For github details, look at
##
library(SCA)
load_Packages_SeuratAnalysis()
ReInstallSCA="NO"
if(ReInstallSCA=="YES"){
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
}
?load_Packages_SeuratAnalysis
?Read10X_Norm_Mouse
?Create_Table
?Filter_Genes_from_Variable_Genelist_Mouse
?Perform_CCA
?Perform_CCA_Diff_PCAdim_res
?Perform_DGE_ONEvsALL
load_Packages_SeuratAnalysis()
source("/Users/kumarpa/Desktop/Work/Jax/Scripts/Functions_Use_Any_Script.R")
source("/Users/kumarpa/Desktop/Work/Jax/Scripts/Scripts_Ewalina/Functions_Ewelina_Project.R")
ClusPallette <- c("#0000ee", "#27408B", "#56B4E9", "#00ffff", "#ff0000", "#8b0000", "#CD5C5C", "#ff80bf", "#008000", "#00ff00", "#CAFF70", "#E69F00", "#DEB887", "#F0E442", "#ffff00", "#8B008B", "#bf3eff", "#7FFFD4", "#b5d4ff", "#FF1493", "#ff8247", "#836fff", "#787878", "#999999", "#D3D3D3", "#000000")
cbPalette.Group.Dark <- c("#27408B", "#8b0000", "#008000", "#E69F00", "#F0E442", "#8B008B", "#ff8247", "#787878")
cbPalette.Group.Light <- c("#0000ee", "#ff0000", "#00ff00", "#ffb90f", "#ffff00","#bf3eff", "#ff8247", "#D3D3D3")
ClusOrder <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15","16","17","18","19","20", "21", "22", "23", "24", "25", "26"); ClusOrder
setwd(pkWD)
plotWD <- paste(getwd(),paste0(NameInpdf),sep="/"); print(plotWD)
dir.create(file.path(getwd(),paste0(NameInpdf)), showWarnings = FALSE)
rm(list=ls()) # clear workspace
library("devtools")
library(roxygen2)
SCApackagedir <- "/Users/kumarpa/Desktop/Work/Jax/GitHub/"
setwd(SCApackagedir)
setwd("./SCA")
WhenMakingSCA="YES"
if(WhenMakingSCA=="YES"){
document()
#rm(list = c("cat_function"))
}
rm(list=ls()) # clear workspace
print("Re-Installing SCA from github")
detach(package:SCA)
library(devtools)
install_github("parveendabas/SCA")
library(SCA)
load_Packages_SeuratAnalysis()
